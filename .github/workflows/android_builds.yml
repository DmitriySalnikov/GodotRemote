name: ðŸ¤– Android
on:
  push:
    paths:
      [
        godot_remote/**,
        .github/**,
        "!.github/**/util_*",
        "**.patch",
        SConstruct,
        Android.mk,
        jni/Application.mk,
      ]
  repository_dispatch:

env:
  godot_version: 3.5.2-stable
  SCONS_CACHE: ${{github.workspace}}/.scons-cache/

# Stop the same workflow actions
concurrency:
  group: ${{github.workflow}}-${{github.event.pull_request.number || github.run_id}}
  cancel-in-progress: true

jobs:
  android-gdnative:
    name: GDNative
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: recursive

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          architecture: "x64"

      - name: Configuring Python packages
        shell: bash
        run: |
          python -m pip install scons
          python --version
          scons --version

      - name: Compile godot-cpp
        run: |
          cd godot-cpp
          git apply --ignore-space-change --ignore-whitespace ../patches/godot_cpp_trim_unused_classes.patch
          scons platform=android android_arch=armv7 target=release generate_bindings=yes -j3
          scons platform=android android_arch=arm64v8 target=release -j3
          scons platform=android android_arch=x86 target=release -j3
          scons platform=android android_arch=x86_64 target=release -j3

      - name: Compile GDNative
        run: |
          $ANDROID_NDK_ROOT/ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=Android.mk  APP_PLATFORM=android-21 -j2

      - name: Prepare Libs
        run: |
          rm -rf libs/*/gdb*
          #cp -rf godot_remote/openh264/libopenh264-2.2.0-android-arm.6.so libs/armeabi-v7a/libopenh264.so
          #cp -rf godot_remote/openh264/libopenh264-2.2.0-android-arm64.6.so libs/arm64-v8a/libopenh264.so
          #cp -rf godot_remote/openh264/libopenh264-2.2.0-android-x86.6.so libs/x86/libopenh264.so
          #cp -rf godot_remote/openh264/libopenh264-2.2.0-android-x64.6.so libs/x86_64/libopenh264.so

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: android
          retention-days: 7
          path: libs/*

  android-module:
    name: Module ${{matrix.arch}} ${{matrix.target}}
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        include:
          - name: armv8 debug
            arch: arm64v8
            target: debug
            additional: ""

          - name: armv8 release
            arch: arm64v8
            target: release
            additional: CCFLAGS="-g"

          - name: armv8 release
            arch: armv7
            target: release
            additional: CCFLAGS="-g"

          - name: armv8 release
            arch: x86_64
            target: release
            additional: CCFLAGS="-g"

          - name: armv8 release
            arch: x86
            target: release
            additional: CCFLAGS="-g"

    steps:
      - name: Checkout Godot
        uses: actions/checkout@v3
        with:
          repository: godotengine/godot
          ref: ${{env.godot_version}}
          lfs: true
          submodules: recursive

      - name: Checkout GodotRemote
        uses: actions/checkout@v3
        with:
          path: gr
          lfs: true
          submodules: recursive

      - name: Add godot_remote_link
        uses: ./gr/.github/actions/add_godot_remote_module

      - name: Restore .scons_cache directory
        uses: actions/cache/restore@v3
        with:
          path: ${{env.SCONS_CACHE}}
          key: ${{github.job}}-${{matrix.arch}}_${{matrix.target}}-${{env.godot_version}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{matrix.arch}}_${{matrix.target}}-${{env.godot_version}}-${{github.ref}}
            ${{github.job}}-${{matrix.arch}}_${{matrix.target}}-${{env.godot_version}}
        continue-on-error: true

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          architecture: "x64"

      - name: Configuring Python packages
        shell: bash
        run: |
          python -m pip install scons
          python --version
          scons --version

      - name: Compile
        run: |
          scons -j2 android_arch="${{matrix.arch}}" tools="no" platform="android" target="${{matrix.target}}" \
          debug_symbols="full" no_editor_splash="yes" module_mobile_vr_enabled="no" module_arkit_enabled="no" \
          module_godot_remote_enabled="yes" godot_remote_disable_server="yes" progress="no" "${{matrix.additional}}"

      # 'dev' - invalid directory name when exporting apk
      - name: Change 'dev' dir name to debug
        if: matrix.target == 'debug'
        shell: bash
        run: |
          cp -r platform/android/java/lib/libs/dev/** platform/android/java/lib/libs/debug/
          rm -r platform/android/java/lib/libs/dev

      - name: Upload Android Project Folder
        uses: actions/upload-artifact@v3
        with:
          name: android_libs
          retention-days: 7
          path: platform/android/java/

      - name: Save .scons_cache directory
        uses: actions/cache/save@v3
        with:
          path: ${{env.SCONS_CACHE}}
          key: ${{github.job}}-${{matrix.arch}}_${{matrix.target}}-${{env.godot_version}}-${{github.ref}}-${{github.sha}}
        continue-on-error: true

  android-gradle:
    name: Android Gradle Build
    needs: android-module
    runs-on: "ubuntu-latest"

    steps:
      - name: Set up Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Download Android Binaries
        uses: actions/download-artifact@v3
        with:
          name: android_libs

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          architecture: "x64"

      - name: Configuring Python packages
        shell: bash
        run: |
          python -m pip install scons
          python --version
          scons --version

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Gradlew Build
        run: |
          sed -i 's/def binDir \= \"\$rootDir\/bin\/\"/def binDir \= \"\bin\/\"/g' build.gradle
          sed -i 's/def pathToRootDir \= \"\.\.\/\.\.\/\.\.\/\.\.\/\"/def pathToRootDir \= \"\.\.\/\"/g' lib/build.gradle
          ./gradlew generateGodotTemplates -PdoNotStrip

      - name: Upload android_source.zip
        uses: actions/upload-artifact@v3
        with:
          name: android_source
          retention-days: 7
          path: bin/android_source.zip
